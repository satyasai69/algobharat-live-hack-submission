{"version":3,"file":"transaction-logger.mjs","sources":["../../src/testing/transaction-logger.ts"],"sourcesContent":["import algosdk from 'algosdk'\nimport { runWhenIndexerCaughtUp } from './indexer'\nimport Algodv2 = algosdk.Algodv2\nimport decodeSignedTransaction = algosdk.decodeSignedTransaction\nimport Indexer = algosdk.Indexer\n\n/**\n * Allows you to keep track of Algorand transaction IDs by wrapping an `Algodv2` in a proxy.\n * Useful for automated tests.\n */\nexport class TransactionLogger {\n  private _sentTransactionIds: string[] = []\n\n  /**\n   * The list of transaction IDs that has been logged thus far.\n   */\n  get sentTransactionIds(): Readonly<string[]> {\n    return this._sentTransactionIds\n  }\n\n  /**\n   * Clear all logged IDs.\n   */\n  clear() {\n    this._sentTransactionIds = []\n  }\n\n  /**\n   * The method that captures raw transactions and stores the transaction IDs.\n   */\n  logRawTransaction(signedTransactions: Uint8Array | Uint8Array[]) {\n    if (Array.isArray(signedTransactions)) {\n      for (const stxn of signedTransactions) {\n        const decoded = decodeSignedTransaction(stxn)\n        this._sentTransactionIds.push(decoded.txn.txID())\n      }\n    } else {\n      const decoded = decodeSignedTransaction(signedTransactions)\n      this._sentTransactionIds.push(decoded.txn.txID())\n    }\n  }\n\n  /** Return a proxy that wraps the given Algodv2 with this transaction logger.\n   *\n   * @param algod The `Algodv2` to wrap\n   * @returns The wrapped `Algodv2`, any transactions sent using this algod instance will be logged by this transaction logger\n   */\n  capture(algod: Algodv2): Algodv2 {\n    return new Proxy<Algodv2>(algod, new TransactionLoggingAlgodv2ProxyHandler(this))\n  }\n\n  /** Wait until all logged transactions IDs appear in the given `Indexer`. */\n  async waitForIndexer(indexer: Indexer) {\n    if (this._sentTransactionIds.length === 0) return\n    const lastTxId = this._sentTransactionIds[this._sentTransactionIds.length - 1]\n    await runWhenIndexerCaughtUp(() => indexer.lookupTransactionByID(lastTxId).do())\n  }\n}\n\nclass TransactionLoggingAlgodv2ProxyHandler implements ProxyHandler<Algodv2> {\n  private transactionLogger: TransactionLogger\n\n  constructor(transactionLogger: TransactionLogger) {\n    this.transactionLogger = transactionLogger\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(target: Algodv2, property: string | symbol, receiver: any) {\n    if (property === 'sendRawTransaction') {\n      return (stxOrStxs: Uint8Array | Uint8Array[]) => {\n        this.transactionLogger.logRawTransaction(stxOrStxs)\n        return target[property].call(receiver, stxOrStxs)\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target as any)[property]\n  }\n}\n"],"names":[],"mappings":";;;AAGA,IAAO,uBAAuB,GAAG,OAAO,CAAC,uBAAuB;AAGhE;;;AAGG;MACU,iBAAiB,CAAA;AAA9B,IAAA,WAAA,GAAA;QACU,IAAmB,CAAA,mBAAA,GAAa,EAAE;;AAE1C;;AAEG;AACH,IAAA,IAAI,kBAAkB,GAAA;QACpB,OAAO,IAAI,CAAC,mBAAmB;;AAGjC;;AAEG;IACH,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,mBAAmB,GAAG,EAAE;;AAG/B;;AAEG;AACH,IAAA,iBAAiB,CAAC,kBAA6C,EAAA;AAC7D,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;AACrC,YAAA,KAAK,MAAM,IAAI,IAAI,kBAAkB,EAAE;AACrC,gBAAA,MAAM,OAAO,GAAG,uBAAuB,CAAC,IAAI,CAAC;AAC7C,gBAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;;;aAE9C;AACL,YAAA,MAAM,OAAO,GAAG,uBAAuB,CAAC,kBAAkB,CAAC;AAC3D,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;;;AAIrD;;;;AAIG;AACH,IAAA,OAAO,CAAC,KAAc,EAAA;QACpB,OAAO,IAAI,KAAK,CAAU,KAAK,EAAE,IAAI,qCAAqC,CAAC,IAAI,CAAC,CAAC;;;IAInF,MAAM,cAAc,CAAC,OAAgB,EAAA;AACnC,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC;YAAE;AAC3C,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9E,QAAA,MAAM,sBAAsB,CAAC,MAAM,OAAO,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;;AAEnF;AAED,MAAM,qCAAqC,CAAA;AAGzC,IAAA,WAAA,CAAY,iBAAoC,EAAA;AAC9C,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB;;;AAI5C,IAAA,GAAG,CAAC,MAAe,EAAE,QAAyB,EAAE,QAAa,EAAA;AAC3D,QAAA,IAAI,QAAQ,KAAK,oBAAoB,EAAE;YACrC,OAAO,CAAC,SAAoC,KAAI;AAC9C,gBAAA,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,CAAC;gBACnD,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;AACnD,aAAC;;;AAGH,QAAA,OAAQ,MAAc,CAAC,QAAQ,CAAC;;AAEnC;;;;"}